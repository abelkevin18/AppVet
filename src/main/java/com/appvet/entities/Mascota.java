package com.appvet.entities;
// Generated 26/10/2018 10:24:52 PM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Mascota generated by hbm2java
 */
@Entity
@Table(name = "mascota", schema = "base_vet")
public class Mascota implements java.io.Serializable {

	private Integer idmascota;
	private Cliente cliente;
	private String nombremascota;
	private String especie;
	private String raza;
	private Date fechanacimiento;
	private String sexo;
	private String caracteristicas;
	private Set<Cita> citas = new HashSet<Cita>(0);
	private Set<Historiaclinica> historiaclinicas = new HashSet<Historiaclinica>(0);

	public Mascota() {
	}

	public Mascota(Cliente cliente) {
		this.cliente = cliente;
	}

	public Mascota(Cliente cliente, String nombremascota, String especie, String raza, Date fechanacimiento,
			String sexo, String caracteristicas, Set<Cita> citas, Set<Historiaclinica> historiaclinicas) {
		this.cliente = cliente;
		this.nombremascota = nombremascota;
		this.especie = especie;
		this.raza = raza;
		this.fechanacimiento = fechanacimiento;
		this.sexo = sexo;
		this.caracteristicas = caracteristicas;
		this.citas = citas;
		this.historiaclinicas = historiaclinicas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idmascota", unique = true, nullable = false)
	public Integer getIdmascota() {
		return this.idmascota;
	}

	public void setIdmascota(Integer idmascota) {
		this.idmascota = idmascota;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcliente", nullable = false)
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@Column(name = "nombremascota", length = 30)
	public String getNombremascota() {
		return this.nombremascota;
	}

	public void setNombremascota(String nombremascota) {
		this.nombremascota = nombremascota;
	}

	@Column(name = "especie", length = 50)
	public String getEspecie() {
		return this.especie;
	}

	public void setEspecie(String especie) {
		this.especie = especie;
	}

	@Column(name = "raza", length = 30)
	public String getRaza() {
		return this.raza;
	}

	public void setRaza(String raza) {
		this.raza = raza;
	}

	//@Temporal(TemporalType.DATE)
	//@DateTimeFormat(pattern = "dd-MM-yyyy")
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Temporal(TemporalType.DATE)
	@Column(name = "fechanacimiento", length = 10)
	public Date getFechanacimiento() {
		return this.fechanacimiento;
	}

	public void setFechanacimiento(Date fechanacimiento) {
		this.fechanacimiento = fechanacimiento;
	}

	@Column(name = "sexo", length = 10)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "caracteristicas", length = 300)
	public String getCaracteristicas() {
		return this.caracteristicas;
	}

	public void setCaracteristicas(String caracteristicas) {
		this.caracteristicas = caracteristicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mascota")
	public Set<Cita> getCitas() {
		return this.citas;
	}

	public void setCitas(Set<Cita> citas) {
		this.citas = citas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mascota")
	public Set<Historiaclinica> getHistoriaclinicas() {
		return this.historiaclinicas;
	}

	public void setHistoriaclinicas(Set<Historiaclinica> historiaclinicas) {
		this.historiaclinicas = historiaclinicas;
	}

}
