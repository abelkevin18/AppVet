package com.appvet.entities;
// Generated 26/10/2018 10:24:52 PM by Hibernate Tools 5.2.10.Final

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Detallepago generated by hbm2java
 */
@Entity
@Table(name = "detallepago", schema = "base_vet")
public class Detallepago implements java.io.Serializable {

	private Integer iddetallepago;
	private Pago pago;
	private Integer cantidad;
	private String descripcion;
	private BigDecimal preciounitario;

	public Detallepago() {
	}

	public Detallepago(Pago pago, Integer cantidad, String descripcion, BigDecimal preciounitario) {
		this.pago = pago;
		this.cantidad = cantidad;
		this.descripcion = descripcion;
		this.preciounitario = preciounitario;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "iddetallepago", unique = true, nullable = false)
	public Integer getIddetallepago() {
		return this.iddetallepago;
	}

	public void setIddetallepago(Integer iddetallepago) {
		this.iddetallepago = iddetallepago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpago")
	public Pago getPago() {
		return this.pago;
	}

	public void setPago(Pago pago) {
		this.pago = pago;
	}

	@Column(name = "cantidad")
	public Integer getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(Integer cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "descripcion", length = 100)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "preciounitario", precision = 7)
	public BigDecimal getPreciounitario() {
		return this.preciounitario;
	}

	public void setPreciounitario(BigDecimal preciounitario) {
		this.preciounitario = preciounitario;
	}

}
